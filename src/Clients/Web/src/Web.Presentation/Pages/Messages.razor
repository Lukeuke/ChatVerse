@attribute [Authorize]
@page "/messages/{Id?}"
@using Web.Application.Repositories.Chat
@using Web.Domain.Models.Chat
@inject IChatRepository ChatRepository

@if (Chats is null)
{
    <div>
        Loading...
    </div>
}
else
{
    foreach (var chatModel in Chats)
    {
        <div class="p-2 m-2">
            <a @onclick='() => NavigationManager.NavigateTo($"messages/g/{chatModel.Id}", true)' style="cursor: pointer;"><div>@chatModel.Name</div></a>
        </div>
    }
}

@code {
    [Parameter]
    public string? Id { get; set; }

    private List<ChatNameIdModel>? Chats { get; set; } = null;
    
    protected override async Task OnInitializedAsync()
    {
        var jwt = await LocalStorage.GetItemAsStringAsync("token");

        var chats = await ChatRepository.GetChats(jwt.Replace("\"", ""));

        Chats = chats.ToList();
    }
}